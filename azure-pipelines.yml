# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  system.debug: 'true'
  # Web app name
  webAppName: 'kl-python'

  # Agent VM image name
  vmImageName: 'Ubuntu-latest'

  # Environment name
  environmentName: 'kl-python'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Set Python version
  pythonVersion: '3.10'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python 3.10'
      inputs:
        versionSpec: $(pythonVersion)
    
    - bash: 'pip install  --target=".python_packages/lib/site-packages"  -r requirements.txt'
      displayName: 'Install Application Dependencies'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
    - deployment: Deploy
      displayName: Deploy
      timeoutInMinutes: 0
      environment: $(environmentName)
      pool:
        vmImage: $(vmImageName)
      strategy:
        runOnce:
          deploy:
            steps:
              - task: AzureWebApp@1
                displayName: "Azure App Service Deploy: ${{webAppName}}"
                inputs:
                  azureSubscription: '$(azureSubscription)'
                  appType: 'webAppLinux'
                  deploymentMethod: runFromPackage
                  appName: '${{webAppName}}'      
                  ResourceGroupName: 'App'
                  package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'

